@page "/"
@using EasyCash.Models
@using EasyCash.Services
@inject UserService UserService
@inject NavigationManager NavigationManager

<link href="/css/LoginReg.css" rel="stylesheet">

<div class="login-container">
    <div class="login-card">
        <h2>Welcome Back</h2>
        <form>
            <div class="form-group">
                <label for="email">Email</label>
                <input id="email" type="email" @bind="LoginEmail" placeholder="Enter your email" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input id="password" type="password" @bind="LoginPassword" placeholder="Enter your password" />
            </div>
            <p>Password input: @LoginPassword</p>
            <div class="form-group">
                <label for="currency">Currency</label>
                <select id="currency" @bind="Currency">
                    <option value="usd">USD - US Dollar</option>
                    <option value="inr">INR - Indian Rupee</option>
                    <option value="eur">EUR - Euro</option>
                </select>
            </div>

            <div class="form-footer">
                <a href="/forgot-password" class="link">Forgot Password?</a>
                <button type="button" class="btn" @onclick="HandleLogin">Login</button>
            </div>
        </form>
        <a href="/register" class="link register-link">New User? Register</a>
    </div>

    @if (!string.IsNullOrEmpty(Message))
    {
        <p class="error-message">@Message</p>
    }
</div>

@code {
    private string LoginEmail = "";
    private string LoginPassword = "";
    private string Currency = "usd";
    private string Message = "";

    private List<User> Users = new();

    protected override void OnInitialized()
    {
        Users = UserService.LoadUsers();
    }

    private void HandleLogin()
    {
        var users = UserService.LoadUsers();
        var user = users.FirstOrDefault(u => u.Email?.Equals(LoginEmail, StringComparison.OrdinalIgnoreCase) == true);

        if (user == null || !UserService.ValidatePassword(LoginPassword, user.PasswordHash))
        {
            Message = "Invalid email or password.";
            return;
        }

        // Set the current user and clear the previous session state
        UserService.Login(user);

        NavigationManager.NavigateTo("/dashboard");
    }
}
